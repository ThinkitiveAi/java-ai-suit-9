[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------< [0;36mcom.example:session-demo[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding session-demo 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot-maven-plugin:3.5.3:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36msession-demo[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:resources[m [1m(default-resources)[m @ [36msession-demo[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 0 resource from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.14.0:compile[m [1m(default-compile)[m @ [36msession-demo[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:testResources[m [1m(default-testResources)[m @ [36msession-demo[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/test/resources to target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.14.0:testCompile[m [1m(default-testCompile)[m @ [36msession-demo[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot-maven-plugin:3.5.3:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36msession-demo[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:3.5.3:run[m [1m(default-cli)[m @ [36msession-demo[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-07-24T19:28:21.646+05:30  INFO 666042 --- [session-demo] [  restartedMain] c.e.session_demo.SessionDemoApplication  : Starting SessionDemoApplication using Java 17.0.13 with PID 666042 (/home/lnv-244/CodeBase/session/java-ai-suit-9/target/classes started by lnv-244 in /home/lnv-244/CodeBase/session/java-ai-suit-9)
2025-07-24T19:28:21.647+05:30  INFO 666042 --- [session-demo] [  restartedMain] c.e.session_demo.SessionDemoApplication  : No active profile set, falling back to 1 default profile: "default"
2025-07-24T19:28:21.672+05:30  INFO 666042 --- [session-demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-07-24T19:28:21.672+05:30  INFO 666042 --- [session-demo] [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-07-24T19:28:22.154+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-24T19:28:22.155+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-24T19:28:22.234+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2025-07-24T19:28:22.241+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-24T19:28:22.242+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-24T19:28:22.252+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.LoginAttemptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:28:22.253+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.PatientAuditLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:28:22.253+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.PatientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:28:22.253+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.ProviderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:28:22.253+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:28:22.253+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.VerificationTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:28:22.254+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-07-24T19:28:22.582+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8082 (http)
2025-07-24T19:28:22.588+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-24T19:28:22.588+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-24T19:28:22.611+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-24T19:28:22.612+05:30  INFO 666042 --- [session-demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 939 ms
2025-07-24T19:28:22.706+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-24T19:28:22.737+05:30  INFO 666042 --- [session-demo] [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-24T19:28:22.759+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-24T19:28:22.900+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-24T19:28:22.914+05:30  INFO 666042 --- [session-demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-07-24T19:28:22.998+05:30  INFO 666042 --- [session-demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c8b9404
2025-07-24T19:28:23.000+05:30  INFO 666042 --- [session-demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-07-24T19:28:23.021+05:30  WARN 666042 --- [session-demo] [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-24T19:28:23.035+05:30  INFO 666042 --- [session-demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.13
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-24T19:28:23.649+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-24T19:28:23.658+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
2025-07-24T19:28:23.660+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
Hibernate: 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
2025-07-24T19:28:23.661+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
Hibernate: 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
2025-07-24T19:28:23.661+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
Hibernate: 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
2025-07-24T19:28:23.661+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
Hibernate: 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
2025-07-24T19:28:23.662+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists login_attempts cascade
Hibernate: 
    drop table if exists login_attempts cascade
2025-07-24T19:28:23.662+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists patient_audit_logs cascade
Hibernate: 
    drop table if exists patient_audit_logs cascade
2025-07-24T19:28:23.662+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists patients cascade
Hibernate: 
    drop table if exists patients cascade
2025-07-24T19:28:23.662+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists providers cascade
Hibernate: 
    drop table if exists providers cascade
2025-07-24T19:28:23.663+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists refresh_tokens cascade
Hibernate: 
    drop table if exists refresh_tokens cascade
2025-07-24T19:28:23.663+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists verification_tokens cascade
Hibernate: 
    drop table if exists verification_tokens cascade
2025-07-24T19:28:23.666+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table login_attempts (
        created_at timestamp(6) not null,
        provider_id bigint,
        id UUID not null,
        attempt_type varchar(255) not null check (attempt_type in ('SUCCESS','FAILED','LOCKED','RATE_LIMITED','ACCOUNT_DISABLED','EMAIL_NOT_VERIFIED')),
        failure_reason varchar(255),
        identifier varchar(255) not null,
        ip_address varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
Hibernate: 
    create table login_attempts (
        created_at timestamp(6) not null,
        provider_id bigint,
        id UUID not null,
        attempt_type varchar(255) not null check (attempt_type in ('SUCCESS','FAILED','LOCKED','RATE_LIMITED','ACCOUNT_DISABLED','EMAIL_NOT_VERIFIED')),
        failure_reason varchar(255),
        identifier varchar(255) not null,
        ip_address varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-07-24T19:28:23.679+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table patient_audit_logs (
        response_status integer,
        sensitive_data_accessed boolean not null,
        success boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint,
        processing_time_ms bigint,
        uuid UUID not null unique,
        action_type varchar(255) not null check (action_type in ('PATIENT_REGISTRATION','PATIENT_LOGIN','PATIENT_LOGOUT','PATIENT_LOGIN_FAILED','PASSWORD_CHANGE','PASSWORD_RESET_REQUEST','PASSWORD_RESET_COMPLETE','ACCOUNT_ACTIVATION','ACCOUNT_DEACTIVATION','ACCOUNT_LOCKOUT','EMAIL_VERIFICATION_SENT','EMAIL_VERIFICATION_COMPLETED','PHONE_VERIFICATION_SENT','PHONE_VERIFICATION_COMPLETED','VERIFICATION_TOKEN_EXPIRED','PATIENT_DATA_VIEW','PATIENT_DATA_UPDATE','PATIENT_DATA_EXPORT','PATIENT_DATA_DELETE','MEDICAL_HISTORY_VIEW','MEDICAL_HISTORY_UPDATE','INSURANCE_INFO_VIEW','INSURANCE_INFO_UPDATE','PRIVACY_CONSENT_GIVEN','PRIVACY_CONSENT_WITHDRAWN','TERMS_ACCEPTED','MARKETING_CONSENT_CHANGED','EMAIL_SENT','SMS_SENT','COMMUNICATION_PREFERENCES_UPDATED','SUSPICIOUS_ACTIVITY_DETECTED','RATE_LIMIT_EXCEEDED','UNAUTHORIZED_ACCESS_ATTEMPT','DATA_ENCRYPTION_PERFORMED','DATA_DECRYPTION_PERFORMED','SYSTEM_BACKUP','SYSTEM_RESTORE','DATABASE_MIGRATION','AUDIT_LOG_CLEANUP')),
        actor_id varchar(255),
        actor_type varchar(255),
        failure_reason varchar(255),
        ip_address varchar(255),
        request_method varchar(255),
        request_uri varchar(255),
        session_id varchar(255),
        user_agent TEXT,
        action_details_encrypted TEXT,
        primary key (id)
    )
Hibernate: 
    create table patient_audit_logs (
        response_status integer,
        sensitive_data_accessed boolean not null,
        success boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint,
        processing_time_ms bigint,
        uuid UUID not null unique,
        action_type varchar(255) not null check (action_type in ('PATIENT_REGISTRATION','PATIENT_LOGIN','PATIENT_LOGOUT','PATIENT_LOGIN_FAILED','PASSWORD_CHANGE','PASSWORD_RESET_REQUEST','PASSWORD_RESET_COMPLETE','ACCOUNT_ACTIVATION','ACCOUNT_DEACTIVATION','ACCOUNT_LOCKOUT','EMAIL_VERIFICATION_SENT','EMAIL_VERIFICATION_COMPLETED','PHONE_VERIFICATION_SENT','PHONE_VERIFICATION_COMPLETED','VERIFICATION_TOKEN_EXPIRED','PATIENT_DATA_VIEW','PATIENT_DATA_UPDATE','PATIENT_DATA_EXPORT','PATIENT_DATA_DELETE','MEDICAL_HISTORY_VIEW','MEDICAL_HISTORY_UPDATE','INSURANCE_INFO_VIEW','INSURANCE_INFO_UPDATE','PRIVACY_CONSENT_GIVEN','PRIVACY_CONSENT_WITHDRAWN','TERMS_ACCEPTED','MARKETING_CONSENT_CHANGED','EMAIL_SENT','SMS_SENT','COMMUNICATION_PREFERENCES_UPDATED','SUSPICIOUS_ACTIVITY_DETECTED','RATE_LIMIT_EXCEEDED','UNAUTHORIZED_ACCESS_ATTEMPT','DATA_ENCRYPTION_PERFORMED','DATA_DECRYPTION_PERFORMED','SYSTEM_BACKUP','SYSTEM_RESTORE','DATABASE_MIGRATION','AUDIT_LOG_CLEANUP')),
        actor_id varchar(255),
        actor_type varchar(255),
        failure_reason varchar(255),
        ip_address varchar(255),
        request_method varchar(255),
        request_uri varchar(255),
        session_id varchar(255),
        user_agent TEXT,
        action_details_encrypted TEXT,
        primary key (id)
    )
2025-07-24T19:28:23.692+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table patients (
        appointment_reminders boolean not null,
        date_of_birth date not null,
        email_notifications boolean not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        insurance_effective_date date,
        insurance_expiry_date date,
        is_active boolean not null,
        login_count integer not null,
        marketing_emails boolean not null,
        phone_verified boolean not null,
        privacy_consent boolean not null,
        sms_notifications boolean not null,
        terms_accepted boolean not null,
        consent_date timestamp(6),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        preferred_language varchar(10),
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        address_city varchar(255),
        address_country varchar(255),
        address_state varchar(255),
        address_street varchar(255),
        address_zip varchar(255),
        email varchar(255) not null unique,
        emergency_contact_email varchar(255),
        emergency_contact_name varchar(255),
        emergency_contact_phone varchar(255),
        emergency_contact_relationship varchar(255),
        gender varchar(255) not null check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),
        insurance_group_number varchar(255),
        insurance_member_id_encrypted varchar(255),
        insurance_policy_number_encrypted varchar(255),
        insurance_provider varchar(255),
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        allergies_encrypted TEXT,
        current_medications_encrypted TEXT,
        medical_history_encrypted TEXT,
        primary key (id)
    )
Hibernate: 
    create table patients (
        appointment_reminders boolean not null,
        date_of_birth date not null,
        email_notifications boolean not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        insurance_effective_date date,
        insurance_expiry_date date,
        is_active boolean not null,
        login_count integer not null,
        marketing_emails boolean not null,
        phone_verified boolean not null,
        privacy_consent boolean not null,
        sms_notifications boolean not null,
        terms_accepted boolean not null,
        consent_date timestamp(6),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        preferred_language varchar(10),
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        address_city varchar(255),
        address_country varchar(255),
        address_state varchar(255),
        address_street varchar(255),
        address_zip varchar(255),
        email varchar(255) not null unique,
        emergency_contact_email varchar(255),
        emergency_contact_name varchar(255),
        emergency_contact_phone varchar(255),
        emergency_contact_relationship varchar(255),
        gender varchar(255) not null check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),
        insurance_group_number varchar(255),
        insurance_member_id_encrypted varchar(255),
        insurance_policy_number_encrypted varchar(255),
        insurance_provider varchar(255),
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        allergies_encrypted TEXT,
        current_medications_encrypted TEXT,
        medical_history_encrypted TEXT,
        primary key (id)
    )
2025-07-24T19:28:23.708+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table providers (
        concurrent_sessions integer not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        is_active boolean not null,
        login_count integer not null,
        years_of_experience integer not null check ((years_of_experience<=50) and (years_of_experience>=0)),
        created_at timestamp(6) not null,
        email_verification_token_expiry timestamp(6),
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        clinic_city varchar(255),
        clinic_state varchar(255),
        clinic_street varchar(255),
        clinic_zip varchar(255),
        email varchar(255) not null unique,
        email_verification_token varchar(255),
        license_document_url varchar(255),
        license_number varchar(255) not null unique,
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        specialization varchar(255) not null check (specialization in ('ALLERGY_IMMUNOLOGY','ANESTHESIOLOGY','CARDIOLOGY','DERMATOLOGY','EMERGENCY_MEDICINE','FAMILY_MEDICINE','GASTROENTEROLOGY','GENERAL_SURGERY','HEMATOLOGY','INFECTIOUS_DISEASE','INTERNAL_MEDICINE','NEPHROLOGY','NEUROLOGY','NEUROSURGERY','OBSTETRICS_GYNECOLOGY','ONCOLOGY','OPHTHALMOLOGY','ORTHOPEDIC_SURGERY','OTOLARYNGOLOGY','PATHOLOGY','PEDIATRICS','PHYSICAL_MEDICINE','PLASTIC_SURGERY','PSYCHIATRY','PULMONOLOGY','RADIOLOGY','RHEUMATOLOGY','UROLOGY','NURSE_PRACTITIONER','PHYSICIAN_ASSISTANT','OTHER')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED')),
        primary key (id)
    )
Hibernate: 
    create table providers (
        concurrent_sessions integer not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        is_active boolean not null,
        login_count integer not null,
        years_of_experience integer not null check ((years_of_experience<=50) and (years_of_experience>=0)),
        created_at timestamp(6) not null,
        email_verification_token_expiry timestamp(6),
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        clinic_city varchar(255),
        clinic_state varchar(255),
        clinic_street varchar(255),
        clinic_zip varchar(255),
        email varchar(255) not null unique,
        email_verification_token varchar(255),
        license_document_url varchar(255),
        license_number varchar(255) not null unique,
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        specialization varchar(255) not null check (specialization in ('ALLERGY_IMMUNOLOGY','ANESTHESIOLOGY','CARDIOLOGY','DERMATOLOGY','EMERGENCY_MEDICINE','FAMILY_MEDICINE','GASTROENTEROLOGY','GENERAL_SURGERY','HEMATOLOGY','INFECTIOUS_DISEASE','INTERNAL_MEDICINE','NEPHROLOGY','NEUROLOGY','NEUROSURGERY','OBSTETRICS_GYNECOLOGY','ONCOLOGY','OPHTHALMOLOGY','ORTHOPEDIC_SURGERY','OTOLARYNGOLOGY','PATHOLOGY','PEDIATRICS','PHYSICAL_MEDICINE','PLASTIC_SURGERY','PSYCHIATRY','PULMONOLOGY','RADIOLOGY','RHEUMATOLOGY','UROLOGY','NURSE_PRACTITIONER','PHYSICIAN_ASSISTANT','OTHER')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED')),
        primary key (id)
    )
2025-07-24T19:28:23.732+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table refresh_tokens (
        is_revoked boolean not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        last_used_at timestamp(6) not null,
        provider_id bigint not null,
        id UUID not null,
        device_info varchar(255),
        ip_address varchar(255),
        token_hash varchar(255) not null unique,
        user_agent varchar(255),
        primary key (id)
    )
Hibernate: 
    create table refresh_tokens (
        is_revoked boolean not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        last_used_at timestamp(6) not null,
        provider_id bigint not null,
        id UUID not null,
        device_info varchar(255),
        ip_address varchar(255),
        token_hash varchar(255) not null unique,
        user_agent varchar(255),
        primary key (id)
    )
2025-07-24T19:28:23.745+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table verification_tokens (
        attempts integer not null check (attempts>=0),
        is_used boolean not null,
        max_attempts integer not null check ((max_attempts>=1) and (max_attempts<=10)),
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint not null,
        used_at timestamp(6),
        uuid UUID not null unique,
        ip_address varchar(255),
        token_hash varchar(255) not null,
        token_type varchar(255) not null check (token_type in ('EMAIL_VERIFICATION','PHONE_VERIFICATION','PASSWORD_RESET','ACCOUNT_ACTIVATION')),
        token_value_encrypted varchar(255),
        user_agent varchar(255),
        primary key (id)
    )
Hibernate: 
    create table verification_tokens (
        attempts integer not null check (attempts>=0),
        is_used boolean not null,
        max_attempts integer not null check ((max_attempts>=1) and (max_attempts<=10)),
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint not null,
        used_at timestamp(6),
        uuid UUID not null unique,
        ip_address varchar(255),
        token_hash varchar(255) not null,
        token_type varchar(255) not null check (token_type in ('EMAIL_VERIFICATION','PHONE_VERIFICATION','PASSWORD_RESET','ACCOUNT_ACTIVATION')),
        token_value_encrypted varchar(255),
        user_agent varchar(255),
        primary key (id)
    )
2025-07-24T19:28:23.759+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_provider 
       on login_attempts (provider_id)
Hibernate: 
    create index idx_login_attempt_provider 
       on login_attempts (provider_id)
2025-07-24T19:28:23.763+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_identifier 
       on login_attempts (identifier)
Hibernate: 
    create index idx_login_attempt_identifier 
       on login_attempts (identifier)
2025-07-24T19:28:23.767+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_ip 
       on login_attempts (ip_address)
Hibernate: 
    create index idx_login_attempt_ip 
       on login_attempts (ip_address)
2025-07-24T19:28:23.772+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_created 
       on login_attempts (created_at)
Hibernate: 
    create index idx_login_attempt_created 
       on login_attempts (created_at)
2025-07-24T19:28:23.777+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_type 
       on login_attempts (attempt_type)
Hibernate: 
    create index idx_login_attempt_type 
       on login_attempts (attempt_type)
2025-07-24T19:28:23.781+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_patient 
       on patient_audit_logs (patient_id)
Hibernate: 
    create index idx_audit_patient 
       on patient_audit_logs (patient_id)
2025-07-24T19:28:23.786+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_action 
       on patient_audit_logs (action_type)
Hibernate: 
    create index idx_audit_action 
       on patient_audit_logs (action_type)
2025-07-24T19:28:23.790+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_created 
       on patient_audit_logs (created_at)
Hibernate: 
    create index idx_audit_created 
       on patient_audit_logs (created_at)
2025-07-24T19:28:23.795+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_sensitive 
       on patient_audit_logs (sensitive_data_accessed)
Hibernate: 
    create index idx_audit_sensitive 
       on patient_audit_logs (sensitive_data_accessed)
2025-07-24T19:28:23.801+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_success 
       on patient_audit_logs (success)
Hibernate: 
    create index idx_audit_success 
       on patient_audit_logs (success)
2025-07-24T19:28:23.807+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_ip 
       on patient_audit_logs (ip_address)
Hibernate: 
    create index idx_audit_ip 
       on patient_audit_logs (ip_address)
2025-07-24T19:28:23.811+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_email 
       on patients (email)
Hibernate: 
    create index idx_patient_email 
       on patients (email)
2025-07-24T19:28:23.817+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_phone 
       on patients (phone_number)
Hibernate: 
    create index idx_patient_phone 
       on patients (phone_number)
2025-07-24T19:28:23.821+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_active 
       on patients (is_active)
Hibernate: 
    create index idx_patient_active 
       on patients (is_active)
2025-07-24T19:28:23.824+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_verified 
       on patients (email_verified, phone_verified)
Hibernate: 
    create index idx_patient_verified 
       on patients (email_verified, phone_verified)
2025-07-24T19:28:23.830+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_created 
       on patients (created_at)
Hibernate: 
    create index idx_patient_created 
       on patients (created_at)
2025-07-24T19:28:23.834+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_dob 
       on patients (date_of_birth)
Hibernate: 
    create index idx_patient_dob 
       on patients (date_of_birth)
2025-07-24T19:28:23.837+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_provider_email 
       on providers (email)
Hibernate: 
    create index idx_provider_email 
       on providers (email)
2025-07-24T19:28:23.843+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_provider_phone 
       on providers (phone_number)
Hibernate: 
    create index idx_provider_phone 
       on providers (phone_number)
2025-07-24T19:28:23.847+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_provider_license 
       on providers (license_number)
Hibernate: 
    create index idx_provider_license 
       on providers (license_number)
2025-07-24T19:28:23.851+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_refresh_token_provider 
       on refresh_tokens (provider_id)
Hibernate: 
    create index idx_refresh_token_provider 
       on refresh_tokens (provider_id)
2025-07-24T19:28:23.856+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_refresh_token_hash 
       on refresh_tokens (token_hash)
Hibernate: 
    create index idx_refresh_token_hash 
       on refresh_tokens (token_hash)
2025-07-24T19:28:23.860+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_refresh_token_expires 
       on refresh_tokens (expires_at)
Hibernate: 
    create index idx_refresh_token_expires 
       on refresh_tokens (expires_at)
2025-07-24T19:28:23.864+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_patient 
       on verification_tokens (patient_id)
Hibernate: 
    create index idx_verification_patient 
       on verification_tokens (patient_id)
2025-07-24T19:28:23.871+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_type 
       on verification_tokens (token_type)
Hibernate: 
    create index idx_verification_type 
       on verification_tokens (token_type)
2025-07-24T19:28:23.875+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_expires 
       on verification_tokens (expires_at)
Hibernate: 
    create index idx_verification_expires 
       on verification_tokens (expires_at)
2025-07-24T19:28:23.878+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_used 
       on verification_tokens (is_used)
Hibernate: 
    create index idx_verification_used 
       on verification_tokens (is_used)
2025-07-24T19:28:23.884+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_active 
       on verification_tokens (is_used, expires_at)
Hibernate: 
    create index idx_verification_active 
       on verification_tokens (is_used, expires_at)
2025-07-24T19:28:23.888+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists login_attempts 
       add constraint FKrauusosq6t9illwjtvtn4dxni 
       foreign key (provider_id) 
       references providers
Hibernate: 
    alter table if exists login_attempts 
       add constraint FKrauusosq6t9illwjtvtn4dxni 
       foreign key (provider_id) 
       references providers
2025-07-24T19:28:23.893+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists patient_audit_logs 
       add constraint FKowk2molo32oxawbg409u3tfxv 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists patient_audit_logs 
       add constraint FKowk2molo32oxawbg409u3tfxv 
       foreign key (patient_id) 
       references patients
2025-07-24T19:28:23.897+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       add constraint FK7euc7bblyp6m2ath08be0kbro 
       foreign key (provider_id) 
       references providers
Hibernate: 
    alter table if exists refresh_tokens 
       add constraint FK7euc7bblyp6m2ath08be0kbro 
       foreign key (provider_id) 
       references providers
2025-07-24T19:28:23.900+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists verification_tokens 
       add constraint FKg4clt67aftoaon2c5olnkhy0q 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists verification_tokens 
       add constraint FKg4clt67aftoaon2c5olnkhy0q 
       foreign key (patient_id) 
       references patients
2025-07-24T19:28:23.905+05:30  INFO 666042 --- [session-demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-24T19:28:24.075+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-24T19:28:25.544+05:30  WARN 666042 --- [session-demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-24T19:28:25.659+05:30  WARN 666042 --- [session-demo] [  restartedMain] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 662684c0-dd7e-4f58-85d2-d25f5dfe3f94

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-24T19:28:25.663+05:30  INFO 666042 --- [session-demo] [  restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-24T19:28:25.996+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-24T19:28:26.018+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8082 (http) with context path '/'
2025-07-24T19:28:26.031+05:30  INFO 666042 --- [session-demo] [  restartedMain] c.e.session_demo.SessionDemoApplication  : Started SessionDemoApplication in 4.626 seconds (process running for 4.842)
2025-07-24T19:28:26.039+05:30  INFO 666042 --- [session-demo] [   scheduling-1] c.e.s.service.SessionCleanupService      : Starting cleanup of expired refresh tokens
2025-07-24T19:28:26.081+05:30 DEBUG 666042 --- [session-demo] [   scheduling-1] org.hibernate.SQL                        : 
    select
        rt1_0.id,
        rt1_0.created_at,
        rt1_0.device_info,
        rt1_0.expires_at,
        rt1_0.ip_address,
        rt1_0.is_revoked,
        rt1_0.last_used_at,
        rt1_0.provider_id,
        rt1_0.token_hash,
        rt1_0.user_agent 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
Hibernate: 
    select
        rt1_0.id,
        rt1_0.created_at,
        rt1_0.device_info,
        rt1_0.expires_at,
        rt1_0.ip_address,
        rt1_0.is_revoked,
        rt1_0.last_used_at,
        rt1_0.provider_id,
        rt1_0.token_hash,
        rt1_0.user_agent 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
2025-07-24T19:28:26.107+05:30 DEBUG 666042 --- [session-demo] [   scheduling-1] org.hibernate.SQL                        : 
    delete 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
Hibernate: 
    delete 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
2025-07-24T19:28:26.109+05:30  INFO 666042 --- [session-demo] [   scheduling-1] c.e.s.service.SessionCleanupService      : Cleanup completed. Deleted 0 expired refresh tokens
2025-07-24T19:28:47.978+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-24T19:28:47.979+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-24T19:28:47.980+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-07-24T19:28:48.001+05:30  WARN 666042 --- [session-demo] [nio-8082-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2025-07-24T19:28:48.132+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.controller.PatientController       : Patient registration attempt from IP: 127.0.0.1
2025-07-24T19:28:48.143+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.email=? 
    fetch
        first ? rows only
2025-07-24T19:28:48.147+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.phone_number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.phone_number=? 
    fetch
        first ? rows only
2025-07-24T19:28:48.149+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.PatientServiceImpl         : Starting patient registration for email: test.user@mailhog.test
2025-07-24T19:28:48.150+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.email=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.email=? 
    fetch
        first ? rows only
2025-07-24T19:28:48.151+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.phone_number=? 
    fetch
        first ? rows only
Hibernate: 
    select
        p1_0.id 
    from
        patients p1_0 
    where
        p1_0.phone_number=? 
    fetch
        first ? rows only
2025-07-24T19:28:48.448+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        patients
        (address_city, address_country, address_state, address_street, address_zip, allergies_encrypted, appointment_reminders, email_notifications, marketing_emails, sms_notifications, consent_date, created_at, current_medications_encrypted, date_of_birth, email, email_verified, emergency_contact_email, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, failed_login_attempts, first_name, gender, insurance_effective_date, insurance_expiry_date, insurance_group_number, insurance_member_id_encrypted, insurance_policy_number_encrypted, insurance_provider, is_active, last_login, last_name, locked_until, login_count, medical_history_encrypted, password_changed_at, password_hash, phone_number, phone_verified, preferred_language, privacy_consent, terms_accepted, updated_at, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patients
        (address_city, address_country, address_state, address_street, address_zip, allergies_encrypted, appointment_reminders, email_notifications, marketing_emails, sms_notifications, consent_date, created_at, current_medications_encrypted, date_of_birth, email, email_verified, emergency_contact_email, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, failed_login_attempts, first_name, gender, insurance_effective_date, insurance_expiry_date, insurance_group_number, insurance_member_id_encrypted, insurance_policy_number_encrypted, insurance_provider, is_active, last_login, last_name, locked_until, login_count, medical_history_encrypted, password_changed_at, password_hash, phone_number, phone_verified, preferred_language, privacy_consent, terms_accepted, updated_at, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:28:48.459+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.PatientServiceImpl         : Patient created with UUID: fe01882b-04dd-44f9-89c4-7022f6833c7a
2025-07-24T19:28:48.468+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:28:48.482+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        verification_tokens
        (attempts, created_at, expires_at, ip_address, is_used, max_attempts, patient_id, token_hash, token_type, token_value_encrypted, used_at, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        verification_tokens
        (attempts, created_at, expires_at, ip_address, is_used, max_attempts, patient_id, token_hash, token_type, token_value_encrypted, used_at, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:28:48.485+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.PatientServiceImpl         : 🔄 Attempting to send patient verification email to: test.user@mailhog.test
2025-07-24T19:28:48.706+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.session_demo.service.EmailService    : Patient verification email sent successfully to: test.user@mailhog.test
2025-07-24T19:28:48.706+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.PatientServiceImpl         : ✅ Patient verification email call completed for: test.user@mailhog.test
2025-07-24T19:28:48.708+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:28:48.712+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.PatientServiceImpl         : Email verification sent to: test.user@mailhog.test
2025-07-24T19:28:48.713+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        verification_tokens
        (attempts, created_at, expires_at, ip_address, is_used, max_attempts, patient_id, token_hash, token_type, token_value_encrypted, used_at, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        verification_tokens
        (attempts, created_at, expires_at, ip_address, is_used, max_attempts, patient_id, token_hash, token_type, token_value_encrypted, used_at, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:28:48.715+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.MockSmsServiceImpl         : === MOCK SMS SERVICE ===
2025-07-24T19:28:48.716+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.MockSmsServiceImpl         : TO: +1555123123
2025-07-24T19:28:48.716+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.MockSmsServiceImpl         : MESSAGE: Your healthcare verification code is: 775000
2025-07-24T19:28:48.716+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.MockSmsServiceImpl         : This code expires in 5 minutes.
2025-07-24T19:28:48.716+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.MockSmsServiceImpl         : =======================
2025-07-24T19:28:48.816+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.MockSmsServiceImpl         : SMS verification code sent successfully to: +1555123123
2025-07-24T19:28:48.818+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-2] org.hibernate.SQL                        : 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:28:48.822+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.service.PatientServiceImpl         : SMS verification sent to: +1555123123
2025-07-24T19:28:48.833+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-2] c.e.s.controller.PatientController       : Patient registration successful for email: test.user@mailhog.test
2025-07-24T19:29:06.520+05:30  INFO 666042 --- [session-demo] [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-07-24T19:29:06.524+05:30  INFO 666042 --- [session-demo] [       Thread-5] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-24T19:29:06.527+05:30  INFO 666042 --- [session-demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-24T19:29:06.646+05:30  INFO 666042 --- [session-demo] [       Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-24T19:29:06.647+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
2025-07-24T19:29:06.648+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
Hibernate: 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
2025-07-24T19:29:06.654+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
Hibernate: 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
2025-07-24T19:29:06.657+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
Hibernate: 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
2025-07-24T19:29:06.659+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
Hibernate: 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
2025-07-24T19:29:06.660+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    drop table if exists login_attempts cascade
Hibernate: 
    drop table if exists login_attempts cascade
2025-07-24T19:29:06.666+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    drop table if exists patient_audit_logs cascade
Hibernate: 
    drop table if exists patient_audit_logs cascade
2025-07-24T19:29:06.670+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    drop table if exists patients cascade
Hibernate: 
    drop table if exists patients cascade
2025-07-24T19:29:06.675+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    drop table if exists providers cascade
Hibernate: 
    drop table if exists providers cascade
2025-07-24T19:29:06.680+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    drop table if exists refresh_tokens cascade
Hibernate: 
    drop table if exists refresh_tokens cascade
2025-07-24T19:29:06.683+05:30 DEBUG 666042 --- [session-demo] [       Thread-5] org.hibernate.SQL                        : 
    drop table if exists verification_tokens cascade
Hibernate: 
    drop table if exists verification_tokens cascade
2025-07-24T19:29:06.689+05:30  INFO 666042 --- [session-demo] [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-07-24T19:29:06.691+05:30  INFO 666042 --- [session-demo] [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.3)

2025-07-24T19:29:06.762+05:30  INFO 666042 --- [session-demo] [  restartedMain] c.e.session_demo.SessionDemoApplication  : Starting SessionDemoApplication using Java 17.0.13 with PID 666042 (/home/lnv-244/CodeBase/session/java-ai-suit-9/target/classes started by lnv-244 in /home/lnv-244/CodeBase/session/java-ai-suit-9)
2025-07-24T19:29:06.762+05:30  INFO 666042 --- [session-demo] [  restartedMain] c.e.session_demo.SessionDemoApplication  : No active profile set, falling back to 1 default profile: "default"
2025-07-24T19:29:06.902+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-24T19:29:06.903+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-24T19:29:06.915+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 6 JPA repository interfaces.
2025-07-24T19:29:06.917+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-24T19:29:06.917+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-24T19:29:06.919+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.LoginAttemptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:29:06.920+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.PatientAuditLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:29:06.920+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.PatientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:29:06.920+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.ProviderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:29:06.920+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:29:06.920+05:30  INFO 666042 --- [session-demo] [  restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.session_demo.repository.VerificationTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-24T19:29:06.920+05:30  INFO 666042 --- [session-demo] [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-07-24T19:29:06.981+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8082 (http)
2025-07-24T19:29:06.982+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-07-24T19:29:06.982+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-24T19:29:06.986+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-07-24T19:29:06.986+05:30  INFO 666042 --- [session-demo] [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 222 ms
2025-07-24T19:29:07.009+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-24T19:29:07.010+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-24T19:29:07.015+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-24T19:29:07.015+05:30  INFO 666042 --- [session-demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-07-24T19:29:07.035+05:30  INFO 666042 --- [session-demo] [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@39f42680
2025-07-24T19:29:07.035+05:30  INFO 666042 --- [session-demo] [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-07-24T19:29:07.037+05:30  WARN 666042 --- [session-demo] [  restartedMain] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-24T19:29:07.038+05:30  INFO 666042 --- [session-demo] [  restartedMain] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 15.13
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-24T19:29:07.158+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-24T19:29:07.158+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
2025-07-24T19:29:07.159+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
Hibernate: 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
2025-07-24T19:29:07.160+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
Hibernate: 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
2025-07-24T19:29:07.160+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
Hibernate: 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
2025-07-24T19:29:07.160+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
Hibernate: 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
2025-07-24T19:29:07.161+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists login_attempts cascade
Hibernate: 
    drop table if exists login_attempts cascade
2025-07-24T19:29:07.161+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists patient_audit_logs cascade
Hibernate: 
    drop table if exists patient_audit_logs cascade
2025-07-24T19:29:07.161+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists patients cascade
Hibernate: 
    drop table if exists patients cascade
2025-07-24T19:29:07.162+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists providers cascade
Hibernate: 
    drop table if exists providers cascade
2025-07-24T19:29:07.162+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists refresh_tokens cascade
Hibernate: 
    drop table if exists refresh_tokens cascade
2025-07-24T19:29:07.162+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    drop table if exists verification_tokens cascade
Hibernate: 
    drop table if exists verification_tokens cascade
2025-07-24T19:29:07.162+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table login_attempts (
        created_at timestamp(6) not null,
        provider_id bigint,
        id UUID not null,
        attempt_type varchar(255) not null check (attempt_type in ('SUCCESS','FAILED','LOCKED','RATE_LIMITED','ACCOUNT_DISABLED','EMAIL_NOT_VERIFIED')),
        failure_reason varchar(255),
        identifier varchar(255) not null,
        ip_address varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
Hibernate: 
    create table login_attempts (
        created_at timestamp(6) not null,
        provider_id bigint,
        id UUID not null,
        attempt_type varchar(255) not null check (attempt_type in ('SUCCESS','FAILED','LOCKED','RATE_LIMITED','ACCOUNT_DISABLED','EMAIL_NOT_VERIFIED')),
        failure_reason varchar(255),
        identifier varchar(255) not null,
        ip_address varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    )
2025-07-24T19:29:07.172+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table patient_audit_logs (
        response_status integer,
        sensitive_data_accessed boolean not null,
        success boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint,
        processing_time_ms bigint,
        uuid UUID not null unique,
        action_type varchar(255) not null check (action_type in ('PATIENT_REGISTRATION','PATIENT_LOGIN','PATIENT_LOGOUT','PATIENT_LOGIN_FAILED','PASSWORD_CHANGE','PASSWORD_RESET_REQUEST','PASSWORD_RESET_COMPLETE','ACCOUNT_ACTIVATION','ACCOUNT_DEACTIVATION','ACCOUNT_LOCKOUT','EMAIL_VERIFICATION_SENT','EMAIL_VERIFICATION_COMPLETED','PHONE_VERIFICATION_SENT','PHONE_VERIFICATION_COMPLETED','VERIFICATION_TOKEN_EXPIRED','PATIENT_DATA_VIEW','PATIENT_DATA_UPDATE','PATIENT_DATA_EXPORT','PATIENT_DATA_DELETE','MEDICAL_HISTORY_VIEW','MEDICAL_HISTORY_UPDATE','INSURANCE_INFO_VIEW','INSURANCE_INFO_UPDATE','PRIVACY_CONSENT_GIVEN','PRIVACY_CONSENT_WITHDRAWN','TERMS_ACCEPTED','MARKETING_CONSENT_CHANGED','EMAIL_SENT','SMS_SENT','COMMUNICATION_PREFERENCES_UPDATED','SUSPICIOUS_ACTIVITY_DETECTED','RATE_LIMIT_EXCEEDED','UNAUTHORIZED_ACCESS_ATTEMPT','DATA_ENCRYPTION_PERFORMED','DATA_DECRYPTION_PERFORMED','SYSTEM_BACKUP','SYSTEM_RESTORE','DATABASE_MIGRATION','AUDIT_LOG_CLEANUP')),
        actor_id varchar(255),
        actor_type varchar(255),
        failure_reason varchar(255),
        ip_address varchar(255),
        request_method varchar(255),
        request_uri varchar(255),
        session_id varchar(255),
        user_agent TEXT,
        action_details_encrypted TEXT,
        primary key (id)
    )
Hibernate: 
    create table patient_audit_logs (
        response_status integer,
        sensitive_data_accessed boolean not null,
        success boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint,
        processing_time_ms bigint,
        uuid UUID not null unique,
        action_type varchar(255) not null check (action_type in ('PATIENT_REGISTRATION','PATIENT_LOGIN','PATIENT_LOGOUT','PATIENT_LOGIN_FAILED','PASSWORD_CHANGE','PASSWORD_RESET_REQUEST','PASSWORD_RESET_COMPLETE','ACCOUNT_ACTIVATION','ACCOUNT_DEACTIVATION','ACCOUNT_LOCKOUT','EMAIL_VERIFICATION_SENT','EMAIL_VERIFICATION_COMPLETED','PHONE_VERIFICATION_SENT','PHONE_VERIFICATION_COMPLETED','VERIFICATION_TOKEN_EXPIRED','PATIENT_DATA_VIEW','PATIENT_DATA_UPDATE','PATIENT_DATA_EXPORT','PATIENT_DATA_DELETE','MEDICAL_HISTORY_VIEW','MEDICAL_HISTORY_UPDATE','INSURANCE_INFO_VIEW','INSURANCE_INFO_UPDATE','PRIVACY_CONSENT_GIVEN','PRIVACY_CONSENT_WITHDRAWN','TERMS_ACCEPTED','MARKETING_CONSENT_CHANGED','EMAIL_SENT','SMS_SENT','COMMUNICATION_PREFERENCES_UPDATED','SUSPICIOUS_ACTIVITY_DETECTED','RATE_LIMIT_EXCEEDED','UNAUTHORIZED_ACCESS_ATTEMPT','DATA_ENCRYPTION_PERFORMED','DATA_DECRYPTION_PERFORMED','SYSTEM_BACKUP','SYSTEM_RESTORE','DATABASE_MIGRATION','AUDIT_LOG_CLEANUP')),
        actor_id varchar(255),
        actor_type varchar(255),
        failure_reason varchar(255),
        ip_address varchar(255),
        request_method varchar(255),
        request_uri varchar(255),
        session_id varchar(255),
        user_agent TEXT,
        action_details_encrypted TEXT,
        primary key (id)
    )
2025-07-24T19:29:07.183+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table patients (
        appointment_reminders boolean not null,
        date_of_birth date not null,
        email_notifications boolean not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        insurance_effective_date date,
        insurance_expiry_date date,
        is_active boolean not null,
        login_count integer not null,
        marketing_emails boolean not null,
        phone_verified boolean not null,
        privacy_consent boolean not null,
        sms_notifications boolean not null,
        terms_accepted boolean not null,
        consent_date timestamp(6),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        preferred_language varchar(10),
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        address_city varchar(255),
        address_country varchar(255),
        address_state varchar(255),
        address_street varchar(255),
        address_zip varchar(255),
        email varchar(255) not null unique,
        emergency_contact_email varchar(255),
        emergency_contact_name varchar(255),
        emergency_contact_phone varchar(255),
        emergency_contact_relationship varchar(255),
        gender varchar(255) not null check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),
        insurance_group_number varchar(255),
        insurance_member_id_encrypted varchar(255),
        insurance_policy_number_encrypted varchar(255),
        insurance_provider varchar(255),
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        allergies_encrypted TEXT,
        current_medications_encrypted TEXT,
        medical_history_encrypted TEXT,
        primary key (id)
    )
Hibernate: 
    create table patients (
        appointment_reminders boolean not null,
        date_of_birth date not null,
        email_notifications boolean not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        insurance_effective_date date,
        insurance_expiry_date date,
        is_active boolean not null,
        login_count integer not null,
        marketing_emails boolean not null,
        phone_verified boolean not null,
        privacy_consent boolean not null,
        sms_notifications boolean not null,
        terms_accepted boolean not null,
        consent_date timestamp(6),
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        preferred_language varchar(10),
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        address_city varchar(255),
        address_country varchar(255),
        address_state varchar(255),
        address_street varchar(255),
        address_zip varchar(255),
        email varchar(255) not null unique,
        emergency_contact_email varchar(255),
        emergency_contact_name varchar(255),
        emergency_contact_phone varchar(255),
        emergency_contact_relationship varchar(255),
        gender varchar(255) not null check (gender in ('MALE','FEMALE','OTHER','PREFER_NOT_TO_SAY')),
        insurance_group_number varchar(255),
        insurance_member_id_encrypted varchar(255),
        insurance_policy_number_encrypted varchar(255),
        insurance_provider varchar(255),
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        allergies_encrypted TEXT,
        current_medications_encrypted TEXT,
        medical_history_encrypted TEXT,
        primary key (id)
    )
2025-07-24T19:29:07.197+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table providers (
        concurrent_sessions integer not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        is_active boolean not null,
        login_count integer not null,
        years_of_experience integer not null check ((years_of_experience<=50) and (years_of_experience>=0)),
        created_at timestamp(6) not null,
        email_verification_token_expiry timestamp(6),
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        clinic_city varchar(255),
        clinic_state varchar(255),
        clinic_street varchar(255),
        clinic_zip varchar(255),
        email varchar(255) not null unique,
        email_verification_token varchar(255),
        license_document_url varchar(255),
        license_number varchar(255) not null unique,
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        specialization varchar(255) not null check (specialization in ('ALLERGY_IMMUNOLOGY','ANESTHESIOLOGY','CARDIOLOGY','DERMATOLOGY','EMERGENCY_MEDICINE','FAMILY_MEDICINE','GASTROENTEROLOGY','GENERAL_SURGERY','HEMATOLOGY','INFECTIOUS_DISEASE','INTERNAL_MEDICINE','NEPHROLOGY','NEUROLOGY','NEUROSURGERY','OBSTETRICS_GYNECOLOGY','ONCOLOGY','OPHTHALMOLOGY','ORTHOPEDIC_SURGERY','OTOLARYNGOLOGY','PATHOLOGY','PEDIATRICS','PHYSICAL_MEDICINE','PLASTIC_SURGERY','PSYCHIATRY','PULMONOLOGY','RADIOLOGY','RHEUMATOLOGY','UROLOGY','NURSE_PRACTITIONER','PHYSICIAN_ASSISTANT','OTHER')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED')),
        primary key (id)
    )
Hibernate: 
    create table providers (
        concurrent_sessions integer not null,
        email_verified boolean not null,
        failed_login_attempts integer not null,
        is_active boolean not null,
        login_count integer not null,
        years_of_experience integer not null check ((years_of_experience<=50) and (years_of_experience>=0)),
        created_at timestamp(6) not null,
        email_verification_token_expiry timestamp(6),
        id bigint generated by default as identity,
        last_login timestamp(6),
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        updated_at timestamp(6) not null,
        uuid UUID not null unique,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        clinic_city varchar(255),
        clinic_state varchar(255),
        clinic_street varchar(255),
        clinic_zip varchar(255),
        email varchar(255) not null unique,
        email_verification_token varchar(255),
        license_document_url varchar(255),
        license_number varchar(255) not null unique,
        password_hash varchar(255) not null,
        phone_number varchar(255) not null unique,
        specialization varchar(255) not null check (specialization in ('ALLERGY_IMMUNOLOGY','ANESTHESIOLOGY','CARDIOLOGY','DERMATOLOGY','EMERGENCY_MEDICINE','FAMILY_MEDICINE','GASTROENTEROLOGY','GENERAL_SURGERY','HEMATOLOGY','INFECTIOUS_DISEASE','INTERNAL_MEDICINE','NEPHROLOGY','NEUROLOGY','NEUROSURGERY','OBSTETRICS_GYNECOLOGY','ONCOLOGY','OPHTHALMOLOGY','ORTHOPEDIC_SURGERY','OTOLARYNGOLOGY','PATHOLOGY','PEDIATRICS','PHYSICAL_MEDICINE','PLASTIC_SURGERY','PSYCHIATRY','PULMONOLOGY','RADIOLOGY','RHEUMATOLOGY','UROLOGY','NURSE_PRACTITIONER','PHYSICIAN_ASSISTANT','OTHER')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED')),
        primary key (id)
    )
2025-07-24T19:29:07.214+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table refresh_tokens (
        is_revoked boolean not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        last_used_at timestamp(6) not null,
        provider_id bigint not null,
        id UUID not null,
        device_info varchar(255),
        ip_address varchar(255),
        token_hash varchar(255) not null unique,
        user_agent varchar(255),
        primary key (id)
    )
Hibernate: 
    create table refresh_tokens (
        is_revoked boolean not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        last_used_at timestamp(6) not null,
        provider_id bigint not null,
        id UUID not null,
        device_info varchar(255),
        ip_address varchar(255),
        token_hash varchar(255) not null unique,
        user_agent varchar(255),
        primary key (id)
    )
2025-07-24T19:29:07.223+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create table verification_tokens (
        attempts integer not null check (attempts>=0),
        is_used boolean not null,
        max_attempts integer not null check ((max_attempts>=1) and (max_attempts<=10)),
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint not null,
        used_at timestamp(6),
        uuid UUID not null unique,
        ip_address varchar(255),
        token_hash varchar(255) not null,
        token_type varchar(255) not null check (token_type in ('EMAIL_VERIFICATION','PHONE_VERIFICATION','PASSWORD_RESET','ACCOUNT_ACTIVATION')),
        token_value_encrypted varchar(255),
        user_agent varchar(255),
        primary key (id)
    )
Hibernate: 
    create table verification_tokens (
        attempts integer not null check (attempts>=0),
        is_used boolean not null,
        max_attempts integer not null check ((max_attempts>=1) and (max_attempts<=10)),
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        patient_id bigint not null,
        used_at timestamp(6),
        uuid UUID not null unique,
        ip_address varchar(255),
        token_hash varchar(255) not null,
        token_type varchar(255) not null check (token_type in ('EMAIL_VERIFICATION','PHONE_VERIFICATION','PASSWORD_RESET','ACCOUNT_ACTIVATION')),
        token_value_encrypted varchar(255),
        user_agent varchar(255),
        primary key (id)
    )
2025-07-24T19:29:07.233+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_provider 
       on login_attempts (provider_id)
Hibernate: 
    create index idx_login_attempt_provider 
       on login_attempts (provider_id)
2025-07-24T19:29:07.237+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_identifier 
       on login_attempts (identifier)
Hibernate: 
    create index idx_login_attempt_identifier 
       on login_attempts (identifier)
2025-07-24T19:29:07.242+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_ip 
       on login_attempts (ip_address)
Hibernate: 
    create index idx_login_attempt_ip 
       on login_attempts (ip_address)
2025-07-24T19:29:07.246+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_created 
       on login_attempts (created_at)
Hibernate: 
    create index idx_login_attempt_created 
       on login_attempts (created_at)
2025-07-24T19:29:07.250+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_login_attempt_type 
       on login_attempts (attempt_type)
Hibernate: 
    create index idx_login_attempt_type 
       on login_attempts (attempt_type)
2025-07-24T19:29:07.256+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_patient 
       on patient_audit_logs (patient_id)
Hibernate: 
    create index idx_audit_patient 
       on patient_audit_logs (patient_id)
2025-07-24T19:29:07.261+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_action 
       on patient_audit_logs (action_type)
Hibernate: 
    create index idx_audit_action 
       on patient_audit_logs (action_type)
2025-07-24T19:29:07.265+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_created 
       on patient_audit_logs (created_at)
Hibernate: 
    create index idx_audit_created 
       on patient_audit_logs (created_at)
2025-07-24T19:29:07.269+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_sensitive 
       on patient_audit_logs (sensitive_data_accessed)
Hibernate: 
    create index idx_audit_sensitive 
       on patient_audit_logs (sensitive_data_accessed)
2025-07-24T19:29:07.275+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_success 
       on patient_audit_logs (success)
Hibernate: 
    create index idx_audit_success 
       on patient_audit_logs (success)
2025-07-24T19:29:07.280+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_audit_ip 
       on patient_audit_logs (ip_address)
Hibernate: 
    create index idx_audit_ip 
       on patient_audit_logs (ip_address)
2025-07-24T19:29:07.284+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_email 
       on patients (email)
Hibernate: 
    create index idx_patient_email 
       on patients (email)
2025-07-24T19:29:07.290+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_phone 
       on patients (phone_number)
Hibernate: 
    create index idx_patient_phone 
       on patients (phone_number)
2025-07-24T19:29:07.295+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_active 
       on patients (is_active)
Hibernate: 
    create index idx_patient_active 
       on patients (is_active)
2025-07-24T19:29:07.299+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_verified 
       on patients (email_verified, phone_verified)
Hibernate: 
    create index idx_patient_verified 
       on patients (email_verified, phone_verified)
2025-07-24T19:29:07.306+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_created 
       on patients (created_at)
Hibernate: 
    create index idx_patient_created 
       on patients (created_at)
2025-07-24T19:29:07.312+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_patient_dob 
       on patients (date_of_birth)
Hibernate: 
    create index idx_patient_dob 
       on patients (date_of_birth)
2025-07-24T19:29:07.318+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_provider_email 
       on providers (email)
Hibernate: 
    create index idx_provider_email 
       on providers (email)
2025-07-24T19:29:07.324+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_provider_phone 
       on providers (phone_number)
Hibernate: 
    create index idx_provider_phone 
       on providers (phone_number)
2025-07-24T19:29:07.328+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_provider_license 
       on providers (license_number)
Hibernate: 
    create index idx_provider_license 
       on providers (license_number)
2025-07-24T19:29:07.335+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_refresh_token_provider 
       on refresh_tokens (provider_id)
Hibernate: 
    create index idx_refresh_token_provider 
       on refresh_tokens (provider_id)
2025-07-24T19:29:07.340+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_refresh_token_hash 
       on refresh_tokens (token_hash)
Hibernate: 
    create index idx_refresh_token_hash 
       on refresh_tokens (token_hash)
2025-07-24T19:29:07.346+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_refresh_token_expires 
       on refresh_tokens (expires_at)
Hibernate: 
    create index idx_refresh_token_expires 
       on refresh_tokens (expires_at)
2025-07-24T19:29:07.352+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_patient 
       on verification_tokens (patient_id)
Hibernate: 
    create index idx_verification_patient 
       on verification_tokens (patient_id)
2025-07-24T19:29:07.357+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_type 
       on verification_tokens (token_type)
Hibernate: 
    create index idx_verification_type 
       on verification_tokens (token_type)
2025-07-24T19:29:07.361+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_expires 
       on verification_tokens (expires_at)
Hibernate: 
    create index idx_verification_expires 
       on verification_tokens (expires_at)
2025-07-24T19:29:07.366+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_used 
       on verification_tokens (is_used)
Hibernate: 
    create index idx_verification_used 
       on verification_tokens (is_used)
2025-07-24T19:29:07.369+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    create index idx_verification_active 
       on verification_tokens (is_used, expires_at)
Hibernate: 
    create index idx_verification_active 
       on verification_tokens (is_used, expires_at)
2025-07-24T19:29:07.374+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists login_attempts 
       add constraint FKrauusosq6t9illwjtvtn4dxni 
       foreign key (provider_id) 
       references providers
Hibernate: 
    alter table if exists login_attempts 
       add constraint FKrauusosq6t9illwjtvtn4dxni 
       foreign key (provider_id) 
       references providers
2025-07-24T19:29:07.378+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists patient_audit_logs 
       add constraint FKowk2molo32oxawbg409u3tfxv 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists patient_audit_logs 
       add constraint FKowk2molo32oxawbg409u3tfxv 
       foreign key (patient_id) 
       references patients
2025-07-24T19:29:07.381+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       add constraint FK7euc7bblyp6m2ath08be0kbro 
       foreign key (provider_id) 
       references providers
Hibernate: 
    alter table if exists refresh_tokens 
       add constraint FK7euc7bblyp6m2ath08be0kbro 
       foreign key (provider_id) 
       references providers
2025-07-24T19:29:07.383+05:30 DEBUG 666042 --- [session-demo] [  restartedMain] org.hibernate.SQL                        : 
    alter table if exists verification_tokens 
       add constraint FKg4clt67aftoaon2c5olnkhy0q 
       foreign key (patient_id) 
       references patients
Hibernate: 
    alter table if exists verification_tokens 
       add constraint FKg4clt67aftoaon2c5olnkhy0q 
       foreign key (patient_id) 
       references patients
2025-07-24T19:29:07.387+05:30  INFO 666042 --- [session-demo] [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-24T19:29:07.659+05:30  WARN 666042 --- [session-demo] [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-24T19:29:07.693+05:30  WARN 666042 --- [session-demo] [  restartedMain] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 0f946065-5a64-473b-852c-38879a1a67a0

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-24T19:29:07.693+05:30  INFO 666042 --- [session-demo] [  restartedMain] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-24T19:29:07.764+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-07-24T19:29:07.771+05:30  INFO 666042 --- [session-demo] [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8082 (http) with context path '/'
2025-07-24T19:29:07.776+05:30  INFO 666042 --- [session-demo] [   scheduling-1] c.e.s.service.SessionCleanupService      : Starting cleanup of expired refresh tokens
2025-07-24T19:29:07.776+05:30  INFO 666042 --- [session-demo] [  restartedMain] c.e.session_demo.SessionDemoApplication  : Started SessionDemoApplication in 1.031 seconds (process running for 46.587)
2025-07-24T19:29:07.778+05:30 DEBUG 666042 --- [session-demo] [   scheduling-1] org.hibernate.SQL                        : 
    select
        rt1_0.id,
        rt1_0.created_at,
        rt1_0.device_info,
        rt1_0.expires_at,
        rt1_0.ip_address,
        rt1_0.is_revoked,
        rt1_0.last_used_at,
        rt1_0.provider_id,
        rt1_0.token_hash,
        rt1_0.user_agent 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
Hibernate: 
    select
        rt1_0.id,
        rt1_0.created_at,
        rt1_0.device_info,
        rt1_0.expires_at,
        rt1_0.ip_address,
        rt1_0.is_revoked,
        rt1_0.last_used_at,
        rt1_0.provider_id,
        rt1_0.token_hash,
        rt1_0.user_agent 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
2025-07-24T19:29:07.778+05:30  INFO 666042 --- [session-demo] [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-07-24T19:29:07.785+05:30 DEBUG 666042 --- [session-demo] [   scheduling-1] org.hibernate.SQL                        : 
    delete 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
Hibernate: 
    delete 
    from
        refresh_tokens rt1_0 
    where
        rt1_0.expires_at<?
2025-07-24T19:29:07.786+05:30  INFO 666042 --- [session-demo] [   scheduling-1] c.e.s.service.SessionCleanupService      : Cleanup completed. Deleted 0 expired refresh tokens
2025-07-24T19:29:15.050+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-24T19:29:15.050+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-07-24T19:29:15.051+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-07-24T19:29:15.062+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] c.e.s.controller.PatientController       : Email verification attempt from IP: 0:0:0:0:0:0:0:1
2025-07-24T19:29:15.063+05:30  INFO 666042 --- [session-demo] [nio-8082-exec-1] c.e.s.service.PatientServiceImpl         : Email verification attempt from IP: 0:0:0:0:0:0:0:1
2025-07-24T19:29:15.066+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-1] org.hibernate.SQL                        : 
    select
        vt1_0.id,
        vt1_0.attempts,
        vt1_0.created_at,
        vt1_0.expires_at,
        vt1_0.ip_address,
        vt1_0.is_used,
        vt1_0.max_attempts,
        vt1_0.patient_id,
        vt1_0.token_hash,
        vt1_0.token_type,
        vt1_0.token_value_encrypted,
        vt1_0.used_at,
        vt1_0.user_agent,
        vt1_0.uuid 
    from
        verification_tokens vt1_0 
    where
        vt1_0.token_hash=?
Hibernate: 
    select
        vt1_0.id,
        vt1_0.attempts,
        vt1_0.created_at,
        vt1_0.expires_at,
        vt1_0.ip_address,
        vt1_0.is_used,
        vt1_0.max_attempts,
        vt1_0.patient_id,
        vt1_0.token_hash,
        vt1_0.token_type,
        vt1_0.token_value_encrypted,
        vt1_0.used_at,
        vt1_0.user_agent,
        vt1_0.uuid 
    from
        verification_tokens vt1_0 
    where
        vt1_0.token_hash=?
2025-07-24T19:29:15.070+05:30 DEBUG 666042 --- [session-demo] [nio-8082-exec-1] org.hibernate.SQL                        : 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        patient_audit_logs
        (action_details_encrypted, action_type, actor_id, actor_type, created_at, failure_reason, ip_address, patient_id, processing_time_ms, request_method, request_uri, response_status, sensitive_data_accessed, session_id, success, user_agent, uuid) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-24T19:29:15.079+05:30 ERROR 666042 --- [session-demo] [nio-8082-exec-1] c.e.s.service.PatientServiceImpl         : Email verification failed

java.lang.IllegalArgumentException: Invalid verification token
	at com.example.session_demo.service.PatientServiceImpl.verifyEmail(PatientServiceImpl.java:107) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.example.session_demo.service.PatientServiceImpl$$SpringCGLIB$$0.verifyEmail(<generated>) ~[classes/:na]
	at com.example.session_demo.controller.PatientController.verifyEmail(PatientController.java:169) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.example.session_demo.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:60) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

2025-07-24T19:29:15.086+05:30 ERROR 666042 --- [session-demo] [nio-8082-exec-1] c.e.s.controller.PatientController       : Email verification failed

java.lang.IllegalArgumentException: Invalid verification token
	at com.example.session_demo.service.PatientServiceImpl.verifyEmail(PatientServiceImpl.java:107) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.2.8.jar:6.2.8]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728) ~[spring-aop-6.2.8.jar:6.2.8]
	at com.example.session_demo.service.PatientServiceImpl$$SpringCGLIB$$0.verifyEmail(<generated>) ~[classes/:na]
	at com.example.session_demo.controller.PatientController.verifyEmail(PatientController.java:169) ~[classes/:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.42.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at com.example.session_demo.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:60) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267) ~[spring-webmvc-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240) ~[spring-security-config-6.5.1.jar:6.5.1]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.8.jar:6.2.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.8.jar:6.2.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.42.jar:10.1.42]
	at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]

2025-07-24T19:29:32.373+05:30  INFO 666042 --- [session-demo] [ionShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-07-24T19:29:32.374+05:30  INFO 666042 --- [session-demo] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-07-24T19:29:32.479+05:30  INFO 666042 --- [session-demo] [ionShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-24T19:29:32.480+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
2025-07-24T19:29:32.480+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
Hibernate: 
    alter table if exists login_attempts 
       drop constraint if exists FKrauusosq6t9illwjtvtn4dxni
2025-07-24T19:29:32.483+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
Hibernate: 
    alter table if exists patient_audit_logs 
       drop constraint if exists FKowk2molo32oxawbg409u3tfxv
2025-07-24T19:29:32.484+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
Hibernate: 
    alter table if exists refresh_tokens 
       drop constraint if exists FK7euc7bblyp6m2ath08be0kbro
2025-07-24T19:29:32.486+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
Hibernate: 
    alter table if exists verification_tokens 
       drop constraint if exists FKg4clt67aftoaon2c5olnkhy0q
2025-07-24T19:29:32.487+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists login_attempts cascade
Hibernate: 
    drop table if exists login_attempts cascade
2025-07-24T19:29:32.490+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists patient_audit_logs cascade
Hibernate: 
    drop table if exists patient_audit_logs cascade
2025-07-24T19:29:32.493+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists patients cascade
Hibernate: 
    drop table if exists patients cascade
2025-07-24T19:29:32.497+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists providers cascade
Hibernate: 
    drop table if exists providers cascade
2025-07-24T19:29:32.500+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists refresh_tokens cascade
Hibernate: 
    drop table if exists refresh_tokens cascade
2025-07-24T19:29:32.502+05:30 DEBUG 666042 --- [session-demo] [ionShutdownHook] org.hibernate.SQL                        : 
    drop table if exists verification_tokens cascade
Hibernate: 
    drop table if exists verification_tokens cascade
2025-07-24T19:29:32.507+05:30  INFO 666042 --- [session-demo] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2025-07-24T19:29:32.511+05:30  INFO 666042 --- [session-demo] [ionShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
